(define (square x)
  (* x x))

(define (quadratic-roots a b c)
  (cond ((= 0 a b c) (list))
	((= 0 b c) (list 0))
	((= 0 a c) (list 0))
	((= 0 a b) (list))
	((= 0 a) (list (/ (- c) b)))
	((= 0 b) (if (> (/ (- c) a))
		   (list (sqrt (/ ((- c) a))) (- (sqrt (/ (- c) a))))
		   (list)))
	((= 0 c) (list 0 (- (/ b a))))
	(else (let ((d (- (square b) (* 4 a c))))
		(cond ((= d 0) (list (/ (- b) (* 2 a))))
		      ((< d 0) (list))
		      (else (list (/ (+ (- b) (sqrt d)) (* 2 a))
				  (/ (- (- b) (sqrt d)) (* 2 a)))))))))
